// Code generated by protoc-gen-go. DO NOT EDIT.
// source: grpc.proto

package rpc

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type Empty struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Empty) Reset()         { *m = Empty{} }
func (m *Empty) String() string { return proto.CompactTextString(m) }
func (*Empty) ProtoMessage()    {}
func (*Empty) Descriptor() ([]byte, []int) {
	return fileDescriptor_grpc_d5c03fbe776e3e0b, []int{0}
}
func (m *Empty) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Empty.Unmarshal(m, b)
}
func (m *Empty) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Empty.Marshal(b, m, deterministic)
}
func (dst *Empty) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Empty.Merge(dst, src)
}
func (m *Empty) XXX_Size() int {
	return xxx_messageInfo_Empty.Size(m)
}
func (m *Empty) XXX_DiscardUnknown() {
	xxx_messageInfo_Empty.DiscardUnknown(m)
}

var xxx_messageInfo_Empty proto.InternalMessageInfo

type UnitRS struct {
	Unit                 string   `protobuf:"bytes,1,opt,name=unit,proto3" json:"unit,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *UnitRS) Reset()         { *m = UnitRS{} }
func (m *UnitRS) String() string { return proto.CompactTextString(m) }
func (*UnitRS) ProtoMessage()    {}
func (*UnitRS) Descriptor() ([]byte, []int) {
	return fileDescriptor_grpc_d5c03fbe776e3e0b, []int{1}
}
func (m *UnitRS) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UnitRS.Unmarshal(m, b)
}
func (m *UnitRS) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UnitRS.Marshal(b, m, deterministic)
}
func (dst *UnitRS) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UnitRS.Merge(dst, src)
}
func (m *UnitRS) XXX_Size() int {
	return xxx_messageInfo_UnitRS.Size(m)
}
func (m *UnitRS) XXX_DiscardUnknown() {
	xxx_messageInfo_UnitRS.DiscardUnknown(m)
}

var xxx_messageInfo_UnitRS proto.InternalMessageInfo

func (m *UnitRS) GetUnit() string {
	if m != nil {
		return m.Unit
	}
	return ""
}

type NLineRQ struct {
	UnitId               string   `protobuf:"bytes,1,opt,name=unit_id,json=unitId,proto3" json:"unit_id,omitempty"`
	Count                int32    `protobuf:"varint,2,opt,name=count,proto3" json:"count,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *NLineRQ) Reset()         { *m = NLineRQ{} }
func (m *NLineRQ) String() string { return proto.CompactTextString(m) }
func (*NLineRQ) ProtoMessage()    {}
func (*NLineRQ) Descriptor() ([]byte, []int) {
	return fileDescriptor_grpc_d5c03fbe776e3e0b, []int{2}
}
func (m *NLineRQ) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_NLineRQ.Unmarshal(m, b)
}
func (m *NLineRQ) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_NLineRQ.Marshal(b, m, deterministic)
}
func (dst *NLineRQ) XXX_Merge(src proto.Message) {
	xxx_messageInfo_NLineRQ.Merge(dst, src)
}
func (m *NLineRQ) XXX_Size() int {
	return xxx_messageInfo_NLineRQ.Size(m)
}
func (m *NLineRQ) XXX_DiscardUnknown() {
	xxx_messageInfo_NLineRQ.DiscardUnknown(m)
}

var xxx_messageInfo_NLineRQ proto.InternalMessageInfo

func (m *NLineRQ) GetUnitId() string {
	if m != nil {
		return m.UnitId
	}
	return ""
}

func (m *NLineRQ) GetCount() int32 {
	if m != nil {
		return m.Count
	}
	return 0
}

type NLineRS struct {
	Line                 string   `protobuf:"bytes,1,opt,name=line,proto3" json:"line,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *NLineRS) Reset()         { *m = NLineRS{} }
func (m *NLineRS) String() string { return proto.CompactTextString(m) }
func (*NLineRS) ProtoMessage()    {}
func (*NLineRS) Descriptor() ([]byte, []int) {
	return fileDescriptor_grpc_d5c03fbe776e3e0b, []int{3}
}
func (m *NLineRS) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_NLineRS.Unmarshal(m, b)
}
func (m *NLineRS) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_NLineRS.Marshal(b, m, deterministic)
}
func (dst *NLineRS) XXX_Merge(src proto.Message) {
	xxx_messageInfo_NLineRS.Merge(dst, src)
}
func (m *NLineRS) XXX_Size() int {
	return xxx_messageInfo_NLineRS.Size(m)
}
func (m *NLineRS) XXX_DiscardUnknown() {
	xxx_messageInfo_NLineRS.DiscardUnknown(m)
}

var xxx_messageInfo_NLineRS proto.InternalMessageInfo

func (m *NLineRS) GetLine() string {
	if m != nil {
		return m.Line
	}
	return ""
}

type NLogRQ struct {
	UnitId               string   `protobuf:"bytes,1,opt,name=unit_id,json=unitId,proto3" json:"unit_id,omitempty"`
	Count                int32    `protobuf:"varint,2,opt,name=count,proto3" json:"count,omitempty"`
	LogPattern           string   `protobuf:"bytes,3,opt,name=log_pattern,json=logPattern,proto3" json:"log_pattern,omitempty"`
	DateTimeLayout       string   `protobuf:"bytes,4,opt,name=date_time_layout,json=dateTimeLayout,proto3" json:"date_time_layout,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *NLogRQ) Reset()         { *m = NLogRQ{} }
func (m *NLogRQ) String() string { return proto.CompactTextString(m) }
func (*NLogRQ) ProtoMessage()    {}
func (*NLogRQ) Descriptor() ([]byte, []int) {
	return fileDescriptor_grpc_d5c03fbe776e3e0b, []int{4}
}
func (m *NLogRQ) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_NLogRQ.Unmarshal(m, b)
}
func (m *NLogRQ) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_NLogRQ.Marshal(b, m, deterministic)
}
func (dst *NLogRQ) XXX_Merge(src proto.Message) {
	xxx_messageInfo_NLogRQ.Merge(dst, src)
}
func (m *NLogRQ) XXX_Size() int {
	return xxx_messageInfo_NLogRQ.Size(m)
}
func (m *NLogRQ) XXX_DiscardUnknown() {
	xxx_messageInfo_NLogRQ.DiscardUnknown(m)
}

var xxx_messageInfo_NLogRQ proto.InternalMessageInfo

func (m *NLogRQ) GetUnitId() string {
	if m != nil {
		return m.UnitId
	}
	return ""
}

func (m *NLogRQ) GetCount() int32 {
	if m != nil {
		return m.Count
	}
	return 0
}

func (m *NLogRQ) GetLogPattern() string {
	if m != nil {
		return m.LogPattern
	}
	return ""
}

func (m *NLogRQ) GetDateTimeLayout() string {
	if m != nil {
		return m.DateTimeLayout
	}
	return ""
}

type TLogRQ struct {
	UnitId               string   `protobuf:"bytes,1,opt,name=unit_id,json=unitId,proto3" json:"unit_id,omitempty"`
	Offset               int64    `protobuf:"varint,2,opt,name=offset,proto3" json:"offset,omitempty"`
	Duration             string   `protobuf:"bytes,4,opt,name=duration,proto3" json:"duration,omitempty"`
	LogPattern           string   `protobuf:"bytes,5,opt,name=log_pattern,json=logPattern,proto3" json:"log_pattern,omitempty"`
	DateTimeLayout       string   `protobuf:"bytes,6,opt,name=date_time_layout,json=dateTimeLayout,proto3" json:"date_time_layout,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *TLogRQ) Reset()         { *m = TLogRQ{} }
func (m *TLogRQ) String() string { return proto.CompactTextString(m) }
func (*TLogRQ) ProtoMessage()    {}
func (*TLogRQ) Descriptor() ([]byte, []int) {
	return fileDescriptor_grpc_d5c03fbe776e3e0b, []int{5}
}
func (m *TLogRQ) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TLogRQ.Unmarshal(m, b)
}
func (m *TLogRQ) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TLogRQ.Marshal(b, m, deterministic)
}
func (dst *TLogRQ) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TLogRQ.Merge(dst, src)
}
func (m *TLogRQ) XXX_Size() int {
	return xxx_messageInfo_TLogRQ.Size(m)
}
func (m *TLogRQ) XXX_DiscardUnknown() {
	xxx_messageInfo_TLogRQ.DiscardUnknown(m)
}

var xxx_messageInfo_TLogRQ proto.InternalMessageInfo

func (m *TLogRQ) GetUnitId() string {
	if m != nil {
		return m.UnitId
	}
	return ""
}

func (m *TLogRQ) GetOffset() int64 {
	if m != nil {
		return m.Offset
	}
	return 0
}

func (m *TLogRQ) GetDuration() string {
	if m != nil {
		return m.Duration
	}
	return ""
}

func (m *TLogRQ) GetLogPattern() string {
	if m != nil {
		return m.LogPattern
	}
	return ""
}

func (m *TLogRQ) GetDateTimeLayout() string {
	if m != nil {
		return m.DateTimeLayout
	}
	return ""
}

type LogRS struct {
	Log                  string   `protobuf:"bytes,1,opt,name=log,proto3" json:"log,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *LogRS) Reset()         { *m = LogRS{} }
func (m *LogRS) String() string { return proto.CompactTextString(m) }
func (*LogRS) ProtoMessage()    {}
func (*LogRS) Descriptor() ([]byte, []int) {
	return fileDescriptor_grpc_d5c03fbe776e3e0b, []int{6}
}
func (m *LogRS) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_LogRS.Unmarshal(m, b)
}
func (m *LogRS) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_LogRS.Marshal(b, m, deterministic)
}
func (dst *LogRS) XXX_Merge(src proto.Message) {
	xxx_messageInfo_LogRS.Merge(dst, src)
}
func (m *LogRS) XXX_Size() int {
	return xxx_messageInfo_LogRS.Size(m)
}
func (m *LogRS) XXX_DiscardUnknown() {
	xxx_messageInfo_LogRS.DiscardUnknown(m)
}

var xxx_messageInfo_LogRS proto.InternalMessageInfo

func (m *LogRS) GetLog() string {
	if m != nil {
		return m.Log
	}
	return ""
}

func init() {
	proto.RegisterType((*Empty)(nil), "rpc.Empty")
	proto.RegisterType((*UnitRS)(nil), "rpc.UnitRS")
	proto.RegisterType((*NLineRQ)(nil), "rpc.NLineRQ")
	proto.RegisterType((*NLineRS)(nil), "rpc.NLineRS")
	proto.RegisterType((*NLogRQ)(nil), "rpc.NLogRQ")
	proto.RegisterType((*TLogRQ)(nil), "rpc.TLogRQ")
	proto.RegisterType((*LogRS)(nil), "rpc.LogRS")
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// LogUnitServiceClient is the client API for LogUnitService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type LogUnitServiceClient interface {
	GetUnits(ctx context.Context, in *Empty, opts ...grpc.CallOption) (LogUnitService_GetUnitsClient, error)
	NLines(ctx context.Context, in *NLineRQ, opts ...grpc.CallOption) (LogUnitService_NLinesClient, error)
	NLogs(ctx context.Context, in *NLogRQ, opts ...grpc.CallOption) (LogUnitService_NLogsClient, error)
	TLogs(ctx context.Context, in *TLogRQ, opts ...grpc.CallOption) (LogUnitService_TLogsClient, error)
}

type logUnitServiceClient struct {
	cc *grpc.ClientConn
}

func NewLogUnitServiceClient(cc *grpc.ClientConn) LogUnitServiceClient {
	return &logUnitServiceClient{cc}
}

func (c *logUnitServiceClient) GetUnits(ctx context.Context, in *Empty, opts ...grpc.CallOption) (LogUnitService_GetUnitsClient, error) {
	stream, err := c.cc.NewStream(ctx, &_LogUnitService_serviceDesc.Streams[0], "/rpc.LogUnitService/GetUnits", opts...)
	if err != nil {
		return nil, err
	}
	x := &logUnitServiceGetUnitsClient{stream}
	if err := x.ClientStream.SendMsg(in); err != nil {
		return nil, err
	}
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	return x, nil
}

type LogUnitService_GetUnitsClient interface {
	Recv() (*UnitRS, error)
	grpc.ClientStream
}

type logUnitServiceGetUnitsClient struct {
	grpc.ClientStream
}

func (x *logUnitServiceGetUnitsClient) Recv() (*UnitRS, error) {
	m := new(UnitRS)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func (c *logUnitServiceClient) NLines(ctx context.Context, in *NLineRQ, opts ...grpc.CallOption) (LogUnitService_NLinesClient, error) {
	stream, err := c.cc.NewStream(ctx, &_LogUnitService_serviceDesc.Streams[1], "/rpc.LogUnitService/NLines", opts...)
	if err != nil {
		return nil, err
	}
	x := &logUnitServiceNLinesClient{stream}
	if err := x.ClientStream.SendMsg(in); err != nil {
		return nil, err
	}
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	return x, nil
}

type LogUnitService_NLinesClient interface {
	Recv() (*NLineRS, error)
	grpc.ClientStream
}

type logUnitServiceNLinesClient struct {
	grpc.ClientStream
}

func (x *logUnitServiceNLinesClient) Recv() (*NLineRS, error) {
	m := new(NLineRS)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func (c *logUnitServiceClient) NLogs(ctx context.Context, in *NLogRQ, opts ...grpc.CallOption) (LogUnitService_NLogsClient, error) {
	stream, err := c.cc.NewStream(ctx, &_LogUnitService_serviceDesc.Streams[2], "/rpc.LogUnitService/NLogs", opts...)
	if err != nil {
		return nil, err
	}
	x := &logUnitServiceNLogsClient{stream}
	if err := x.ClientStream.SendMsg(in); err != nil {
		return nil, err
	}
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	return x, nil
}

type LogUnitService_NLogsClient interface {
	Recv() (*LogRS, error)
	grpc.ClientStream
}

type logUnitServiceNLogsClient struct {
	grpc.ClientStream
}

func (x *logUnitServiceNLogsClient) Recv() (*LogRS, error) {
	m := new(LogRS)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func (c *logUnitServiceClient) TLogs(ctx context.Context, in *TLogRQ, opts ...grpc.CallOption) (LogUnitService_TLogsClient, error) {
	stream, err := c.cc.NewStream(ctx, &_LogUnitService_serviceDesc.Streams[3], "/rpc.LogUnitService/TLogs", opts...)
	if err != nil {
		return nil, err
	}
	x := &logUnitServiceTLogsClient{stream}
	if err := x.ClientStream.SendMsg(in); err != nil {
		return nil, err
	}
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	return x, nil
}

type LogUnitService_TLogsClient interface {
	Recv() (*LogRS, error)
	grpc.ClientStream
}

type logUnitServiceTLogsClient struct {
	grpc.ClientStream
}

func (x *logUnitServiceTLogsClient) Recv() (*LogRS, error) {
	m := new(LogRS)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

// LogUnitServiceServer is the server API for LogUnitService service.
type LogUnitServiceServer interface {
	GetUnits(*Empty, LogUnitService_GetUnitsServer) error
	NLines(*NLineRQ, LogUnitService_NLinesServer) error
	NLogs(*NLogRQ, LogUnitService_NLogsServer) error
	TLogs(*TLogRQ, LogUnitService_TLogsServer) error
}

func RegisterLogUnitServiceServer(s *grpc.Server, srv LogUnitServiceServer) {
	s.RegisterService(&_LogUnitService_serviceDesc, srv)
}

func _LogUnitService_GetUnits_Handler(srv interface{}, stream grpc.ServerStream) error {
	m := new(Empty)
	if err := stream.RecvMsg(m); err != nil {
		return err
	}
	return srv.(LogUnitServiceServer).GetUnits(m, &logUnitServiceGetUnitsServer{stream})
}

type LogUnitService_GetUnitsServer interface {
	Send(*UnitRS) error
	grpc.ServerStream
}

type logUnitServiceGetUnitsServer struct {
	grpc.ServerStream
}

func (x *logUnitServiceGetUnitsServer) Send(m *UnitRS) error {
	return x.ServerStream.SendMsg(m)
}

func _LogUnitService_NLines_Handler(srv interface{}, stream grpc.ServerStream) error {
	m := new(NLineRQ)
	if err := stream.RecvMsg(m); err != nil {
		return err
	}
	return srv.(LogUnitServiceServer).NLines(m, &logUnitServiceNLinesServer{stream})
}

type LogUnitService_NLinesServer interface {
	Send(*NLineRS) error
	grpc.ServerStream
}

type logUnitServiceNLinesServer struct {
	grpc.ServerStream
}

func (x *logUnitServiceNLinesServer) Send(m *NLineRS) error {
	return x.ServerStream.SendMsg(m)
}

func _LogUnitService_NLogs_Handler(srv interface{}, stream grpc.ServerStream) error {
	m := new(NLogRQ)
	if err := stream.RecvMsg(m); err != nil {
		return err
	}
	return srv.(LogUnitServiceServer).NLogs(m, &logUnitServiceNLogsServer{stream})
}

type LogUnitService_NLogsServer interface {
	Send(*LogRS) error
	grpc.ServerStream
}

type logUnitServiceNLogsServer struct {
	grpc.ServerStream
}

func (x *logUnitServiceNLogsServer) Send(m *LogRS) error {
	return x.ServerStream.SendMsg(m)
}

func _LogUnitService_TLogs_Handler(srv interface{}, stream grpc.ServerStream) error {
	m := new(TLogRQ)
	if err := stream.RecvMsg(m); err != nil {
		return err
	}
	return srv.(LogUnitServiceServer).TLogs(m, &logUnitServiceTLogsServer{stream})
}

type LogUnitService_TLogsServer interface {
	Send(*LogRS) error
	grpc.ServerStream
}

type logUnitServiceTLogsServer struct {
	grpc.ServerStream
}

func (x *logUnitServiceTLogsServer) Send(m *LogRS) error {
	return x.ServerStream.SendMsg(m)
}

var _LogUnitService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "rpc.LogUnitService",
	HandlerType: (*LogUnitServiceServer)(nil),
	Methods:     []grpc.MethodDesc{},
	Streams: []grpc.StreamDesc{
		{
			StreamName:    "GetUnits",
			Handler:       _LogUnitService_GetUnits_Handler,
			ServerStreams: true,
		},
		{
			StreamName:    "NLines",
			Handler:       _LogUnitService_NLines_Handler,
			ServerStreams: true,
		},
		{
			StreamName:    "NLogs",
			Handler:       _LogUnitService_NLogs_Handler,
			ServerStreams: true,
		},
		{
			StreamName:    "TLogs",
			Handler:       _LogUnitService_TLogs_Handler,
			ServerStreams: true,
		},
	},
	Metadata: "grpc.proto",
}

func init() { proto.RegisterFile("grpc.proto", fileDescriptor_grpc_d5c03fbe776e3e0b) }

var fileDescriptor_grpc_d5c03fbe776e3e0b = []byte{
	// 362 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x94, 0x52, 0x41, 0x4b, 0xf3, 0x40,
	0x14, 0x64, 0xbf, 0x34, 0x49, 0xbf, 0xd7, 0x8f, 0x52, 0x96, 0x0f, 0x8d, 0x51, 0xb1, 0x04, 0x94,
	0x9e, 0x8a, 0xe8, 0xc5, 0x73, 0x41, 0x44, 0x08, 0xa5, 0xa6, 0xf1, 0x1c, 0x62, 0xb2, 0x8d, 0x0b,
	0xe9, 0x6e, 0x48, 0x36, 0x42, 0xaf, 0xfe, 0x12, 0x6f, 0xfe, 0x4d, 0x79, 0xbb, 0xa9, 0x14, 0x29,
	0xa8, 0xb7, 0x37, 0xf3, 0x66, 0x87, 0xe1, 0xcd, 0x02, 0x14, 0x75, 0x95, 0x4d, 0xab, 0x5a, 0x2a,
	0x49, 0xad, 0xba, 0xca, 0x02, 0x17, 0xec, 0xdb, 0x75, 0xa5, 0x36, 0xc1, 0x09, 0x38, 0x8f, 0x82,
	0xab, 0x68, 0x49, 0x29, 0xf4, 0x5a, 0xc1, 0x95, 0x47, 0xc6, 0x64, 0xf2, 0x37, 0xd2, 0x73, 0x70,
	0x03, 0xee, 0x3c, 0xe4, 0x82, 0x45, 0x0f, 0xf4, 0x10, 0x5c, 0xa4, 0x12, 0x9e, 0x77, 0x0a, 0x07,
	0xe1, 0x7d, 0x4e, 0xff, 0x83, 0x9d, 0xc9, 0x56, 0x28, 0xef, 0xcf, 0x98, 0x4c, 0xec, 0xc8, 0x80,
	0xe0, 0x74, 0xfb, 0x52, 0x1b, 0x97, 0x5c, 0xb0, 0xad, 0x31, 0xce, 0xc1, 0x2b, 0x01, 0x67, 0x1e,
	0xca, 0xe2, 0xd7, 0xc6, 0xf4, 0x0c, 0x06, 0xa5, 0x2c, 0x92, 0x2a, 0x55, 0x8a, 0xd5, 0xc2, 0xb3,
	0xf4, 0x13, 0x28, 0x65, 0xb1, 0x30, 0x0c, 0x9d, 0xc0, 0x28, 0x4f, 0x15, 0x4b, 0x14, 0x5f, 0xb3,
	0xa4, 0x4c, 0x37, 0xb2, 0x55, 0x5e, 0x4f, 0xab, 0x86, 0xc8, 0xc7, 0x7c, 0xcd, 0x42, 0xcd, 0x06,
	0x6f, 0x04, 0x9c, 0xf8, 0x9b, 0x10, 0x07, 0xe0, 0xc8, 0xd5, 0xaa, 0x61, 0x26, 0x85, 0x15, 0x75,
	0x88, 0xfa, 0xd0, 0xcf, 0xdb, 0x3a, 0x55, 0x5c, 0x8a, 0xce, 0xfd, 0x13, 0x7f, 0x8d, 0x68, 0xff,
	0x28, 0xa2, 0xb3, 0x37, 0xe2, 0x11, 0xd8, 0x18, 0x70, 0x49, 0x47, 0x60, 0x95, 0xb2, 0xe8, 0xc2,
	0xe1, 0x78, 0xf5, 0x4e, 0x60, 0x18, 0xca, 0x02, 0xdb, 0x5b, 0xb2, 0xfa, 0x85, 0x67, 0x8c, 0x9e,
	0x43, 0xff, 0x8e, 0x29, 0x64, 0x1a, 0x0a, 0x53, 0xac, 0x5c, 0x97, 0xec, 0x0f, 0xf4, 0x6c, 0x7a,
	0xbe, 0x24, 0xf4, 0x02, 0x6f, 0xcf, 0x05, 0x6b, 0xe8, 0x3f, 0xbd, 0xe8, 0x2a, 0xf6, 0x77, 0x11,
	0xea, 0x02, 0xb0, 0xb1, 0xa3, 0x86, 0x0e, 0xba, 0x05, 0x9e, 0xca, 0x37, 0xc6, 0x3a, 0x95, 0xd1,
	0xc4, 0x3b, 0x9a, 0x78, 0x8f, 0x66, 0x76, 0x0c, 0x43, 0x2e, 0xa7, 0xa5, 0x2c, 0x9a, 0x67, 0x5e,
	0xe1, 0x66, 0xe6, 0x86, 0x06, 0x2c, 0xc8, 0x93, 0xa3, 0x7f, 0xe5, 0xf5, 0x47, 0x00, 0x00, 0x00,
	0xff, 0xff, 0x09, 0x98, 0x65, 0xfe, 0xa3, 0x02, 0x00, 0x00,
}
